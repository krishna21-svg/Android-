<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="30dp"
    android:background="#1E1E1E">

    <TextView
        android:id="@+id/timer"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="00:00:000"
        android:textSize="40sp"
        android:textColor="#FFFFFF"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="100dp" />

    <LinearLayout
        android:id="@+id/buttonLayout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center"
        android:layout_below="@id/timer"
        android:layout_marginTop="50dp">

        <Button
            android:id="@+id/startButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Start" />

        <Button
            android:id="@+id/pauseButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Pause"
            android:layout_marginStart="20dp"
            android:layout_marginEnd="20dp" />

        <Button
            android:id="@+id/resetButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Reset" />
    </LinearLayout>

</RelativeLayout>
âœ… Step 3: MainActivity.java
java
Copy code
package com.example.stopwatch;

import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private TextView timerTextView;
    private Button startButton, pauseButton, resetButton;

    private long startTime = 0L;
    private long timeBuffer = 0L;
    private long updateTime = 0L;
    private Handler handler = new Handler();
    private boolean isRunning = false;

    private Runnable runnable = new Runnable() {
        @Override
        public void run() {
            long timeInMilliseconds = System.currentTimeMillis() - startTime;
            updateTime = timeBuffer + timeInMilliseconds;

            int secs = (int) (updateTime / 1000);
            int mins = secs / 60;
            secs = secs % 60;
            int millis = (int) (updateTime % 1000);

            timerTextView.setText(String.format("%02d:%02d:%03d", mins, secs, millis));
            handler.postDelayed(this, 10);
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        timerTextView = findViewById(R.id.timer);
        startButton = findViewById(R.id.startButton);
        pauseButton = findViewById(R.id.pauseButton);
        resetButton = findViewById(R.id.resetButton);

        startButton.setOnClickListener(view -> {
            if (!isRunning) {
                startTime = System.currentTimeMillis();
                handler.post(runnable);
                isRunning = true;
            }
        });

        pauseButton.setOnClickListener(view -> {
            if (isRunning) {
                timeBuffer += System.currentTimeMillis() - startTime;
                handler.removeCallbacks(runnable);
                isRunning = false;
            }
        });

        resetButton.setOnClickListener(view -> {
            startTime = 0L;
            timeBuffer = 0L;
            updateTime = 0L;
            timerTextView.setText("00:00:000");
            handler.removeCallbacks(runnable);
            isRunning = false;
        });
    }
}